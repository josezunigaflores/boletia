// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "BOLETIA",
            "email": "team@boletia"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/currencies/:id": {
            "get": {
                "description": "the source find within all currencies and returns these.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "currencies"
                ],
                "summary": "Getting all currency or specific currency.",
                "responses": {
                    "201": {
                        "description": "Response general",
                        "schema": {
                            "$ref": "#/definitions/currency.ResponseCurrencies"
                        }
                    },
                    "400": {
                        "description": "Response with error field",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPResponse"
                        }
                    },
                    "500": {
                        "description": "Response for any error in server",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "currency.ResponseCurrencies": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal.Currency"
                    }
                },
                "error": {
                    "type": "string",
                    "example": "error get some source"
                },
                "message": {
                    "type": "string",
                    "example": "Success load the source"
                }
            }
        },
        "internal.Currency": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "lastUpdatedAt": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "utils.HTTPResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "error": {
                    "type": "string",
                    "example": "error get some source"
                },
                "message": {
                    "type": "string",
                    "example": "Success load the source"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Currencies",
	Description:      "This project query to currency api and change the values.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
